<local:CBaseWindow
        xmlns:local="clr-namespace:NmspTraveler"  
        x:Class="NmspTraveler.CRouteWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Информационно-отчётная система автовокзала Путник or Automatic bus station information reporting system 'Traveler'" 
        WindowStartupLocation="CenterScreen" WindowState="Maximized"
        WindowStyle="None" AllowsTransparency="True" Loaded="OnWindowLoaded"
        MouseMove="OnWindowMouseMove"
        >

    <Window.Resources>
        <Style x:Key="ScrollBarLineLeftButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="LightBlue" Points="3,9 15,3 15,15" Opacity="0.3" ></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineRightButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="LightBlue" Points="3,3 15,9 3,15" Opacity="0.3" ></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineUpButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="LightBlue" Points="3,15 15,15 9,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarLineDownButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Canvas Height="18">
                            <Polygon Fill="LightBlue" Points="3,3 9,15 15,3"></Polygon>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border BorderBrush="Transparent"></Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Margin" Value="1,0,1,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Rectangle Fill="LightBlue" Margin="2" Opacity="0.3" ></Rectangle>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>

                <RepeatButton Grid.Column="0" Width="18" Style="{StaticResource ScrollBarLineLeftButtonStyle}"
                    Command="ScrollBar.LineLeftCommand" >
                </RepeatButton>

                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">

                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageLeftCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>

                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>

                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageRightCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>

                </Track>
                
                <RepeatButton Grid.Column="3" Height="18"
                    Style="{StaticResource ScrollBarLineRightButtonStyle}" Command="ScrollBar.LineRightCommand">
                </RepeatButton>

            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>

                <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineUpButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
                </RepeatButton>
                <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineDownButtonStyle}"
                          Command="ScrollBar.LineDownCommand">
                </RepeatButton>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
        </Style>

        <Style TargetType="{x:Type MenuItem}" x:Key="MenuItemStyle" >
            <Setter Property="BorderBrush" Value="White"></Setter>
            <Setter Property="BorderThickness" Value="0,0,0,0"></Setter>
            <Setter Property="Background" Value="#0264AD"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="FontFamily" Value="Arial"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="Margin" Value="-5,0,-5,0"></Setter>
            <Setter Property="Padding" Value="0,12,0,12"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Bd" Padding="17,0,17,0" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True" Uid="Border_38">
                            
                            <ContentPresenter x:Name="ContentPresenter"  Content="{TemplateBinding Header}" Grid.Column="1" 
                            ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Uid="ContentPresenter_33"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="White"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="White"></Setter>
                    <Setter Property="Background" Value="#43BDEE"></Setter>
                </Trigger>
                <Trigger Property="IsMouseOver"  Value="True">
                    <Setter Property="Foreground" Value="Gray"></Setter>
                    <Setter Property="Background" Value="White"></Setter>
                </Trigger>
            </Style.Triggers>

        </Style>

        <ContextMenu x:Key="RouteTextBoxContextMenu" FontFamily="Arial" Foreground="White"  
            Background="#43BDEE" Opacity="1.0" FontSize="20" FontWeight="Bold" BorderBrush="White" 
            KeyDown="OnRouteTextBoxContextMenuKeyDown" >
           
            <MenuItem Style="{StaticResource MenuItemStyle}" Header="Edit Route Name" 
                      PreviewMouseLeftButtonUp="EditRouteName" Background="#43BDEE" />
            
            <MenuItem Style="{StaticResource MenuItemStyle}"  Header="Delete Route" 
                      PreviewMouseLeftButtonUp="DeleteRoute" Background="#43BDEE" />
        </ContextMenu>

        <ContextMenu x:Key="TripTextBoxContextMenu" FontFamily="Arial" Foreground="White" 
            Background="#43BDEE" Opacity="1.0" FontSize="14" FontWeight="Bold" BorderBrush="White" 
            KeyDown="OnTripTextBoxContextMenuKeyDown" >

            <MenuItem Style="{StaticResource MenuItemStyle}" Header="Open Trip" 
                PreviewMouseLeftButtonUp="OpenTrip"  Background="#43BDEE"/>

            <MenuItem Style="{StaticResource MenuItemStyle}" Header="Edit Trip Departure Time" 
                PreviewMouseLeftButtonUp="EditTripDepartureTime"  Background="#43BDEE"/>

            <MenuItem Style="{StaticResource MenuItemStyle}" Header="Delete Trip" 
                PreviewMouseLeftButtonUp="DeleteTrip"  Background="#43BDEE"/>
        </ContextMenu>

        <ContextMenu x:Key="TripTextBoxStubContextMenu" Visibility="Hidden" >      
        </ContextMenu>

    </Window.Resources>

    <Grid>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="31" />
            <ColumnDefinition />
            <ColumnDefinition Width="33" />
            <ColumnDefinition Width="33" />
            <ColumnDefinition Width="33" />
            <ColumnDefinition Width="33" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="33"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <Image Grid.Row="0" Grid.ColumnSpan="6" Stretch="Fill" 
               Source="pack://siteoforigin:,,,/Resource/Pictures/Caption.bmp"/>
        
        <Image Grid.Row="0" Grid.Column="0" Width="20" Height="20" Margin="5,0,0,5" VerticalAlignment="Bottom" 
               Source="pack://siteoforigin:,,,/Resource/Pictures/Icon.bmp"/>
        
        <Image Grid.Row="1" Grid.ColumnSpan="6" Stretch="Fill" 
               Source="pack://siteoforigin:,,,/Resource/Pictures/BackGround.bmp"/>

        <TextBlock x:Name="tbCaption" Grid.Column="1" Grid.Row="0" FontFamily="Arial"
            Margin="5,7,0,0" Foreground="White" Opacity="1.0" FontSize="20" FontWeight="Bold" >
            Traveler - Routes
        </TextBlock>

        <Button x:Name="btnRouteWindowHideButton" ToolTip="Minimize" Focusable="False" Margin="0,7,7,0" 
                Width="26" Height="26" Grid.Row="0" Grid.Column="4" Button.Click="OnHideButton" Content="_"
                FontFamily="Arial" Foreground="White" Background="Transparent" Opacity="1.0" 
                FontSize="14" FontWeight="Bold" BorderBrush="White" >
        </Button>

        <Button x:Name="btnRouteWindowCloseButton" ToolTip="Close" Focusable="False" Margin="0,7,7,0" 
                Width="26" Height="26" Grid.Row="0" Grid.Column="5" Button.Click="OnCloseButton" Content="X"
                FontFamily="Arial" Foreground="White" Background="Transparent" Opacity="1.0" 
                FontSize="14" FontWeight="Bold" BorderBrush="White"  >
        </Button>

        <Button x:Name="btnRouteWindowAboutButton" ToolTip="About" Focusable="False" Margin="0,7,7,0" 
                Width="26" Height="26" Grid.Row="0" Grid.Column="2" Button.Click="OnAboutButton" Content="i"
                FontFamily="Arial" Foreground="White" Background="Transparent" Opacity="1.0" 
                FontSize="14" FontWeight="Normal" BorderBrush="White" >
        </Button>

        <Button x:Name="btnRouteWindowHelpButton" ToolTip="Help" Focusable="False" Margin="0,7,7,0" 
                Width="26" Height="26" Grid.Row="0" Grid.Column="3" Button.Click="OnHelpButton" Content="?"
                FontFamily="Arial" Foreground="White" Background="Transparent" Opacity="1.0" 
                FontSize="14" FontWeight="Normal" BorderBrush="White" >
        </Button>

        <ListView Margin="10" Name="lvRoutes" Grid.Row="1" Grid.ColumnSpan="6" Background="Transparent" 
                  Loaded="OnListViewLoaded" BorderThickness="0" MouseMove="OnListViewMouseMove" 
                  MouseLeave="OnListViewMouseMove" SelectionChanged="OnListViewItemSelected"
                  >
            <ListView.View>
                <GridView>
                    <GridViewColumn x:Name="VehicleRouteNameGridViewColumn"  Width="500" >    
                        <GridViewColumn.Header >
                            <TextBlock Text="Vehicle Route Name" Height="50" FontSize="20" FontFamily="Arial" 
                                FontWeight="Bold"  Background="Transparent"  Foreground="Gray" TextAlignment="Center" 
                                Padding="15"/> 
                        </GridViewColumn.Header>

                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox x:Name="tbVehicleRouteNameTextBox" Text="{Binding sRouteName}" Focusable="False" 
                                         Background="Transparent" Foreground="White" BorderThickness="0" Cursor="Arrow" 
                                         GotFocus="OnListViewTextBoxFocusChanged" LostFocus="OnListViewTextBoxFocusChanged" 
                                         CommandManager.PreviewExecuted="OnPreviewExecuted" 
                                         ContextMenu="{StaticResource RouteTextBoxContextMenu}" >

                                </TextBox>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
              
                    <GridViewColumn x:Name="VehicleDepartureTimeGridViewColumn">
                        <GridViewColumn.Header>
                            <TextBlock Text="Vehicle Departure Time" Height="50" FontSize="20" FontFamily="Arial" 
                                FontWeight="Bold" Background="Transparent" Foreground="Gray" TextAlignment="Center"
                                Padding="15"/>
                        </GridViewColumn.Header>
                        
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ListBox x:Name="lbRoutes" ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                                         ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                         Background="Transparent" Foreground="White" BorderThickness="0"
                                         ItemsSource="{Binding ieVehicleDepartureTime}" SelectedValue="{Binding sVehicleDepartureTime}"
                                         SelectedValuePath="sVehicleDepartureTime" DisplayMemberPath="sVehicleDepartureTime"
                                         SelectionMode="Single" >
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel IsItemsHost="True" />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>

                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBox x:Name="tbVehicleDepartureTime" Text="{Binding sVehicleDepartureTime}" Focusable="False" 
                                                 Background="Transparent" Foreground="White" BorderThickness="0" Cursor="Arrow" 
                                                 GotFocus="OnListBoxTextBoxFocusChanged" LostFocus="OnListBoxTextBoxFocusChanged"                 
                                                 CommandManager.PreviewExecuted="OnPreviewExecuted" >
                
                                                <TextBox.Style> 
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Setter Property="ContextMenu" Value="{StaticResource TripTextBoxStubContextMenu}" />
                                                        <Style.Triggers>
                                                            <MultiTrigger>
                                                                
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="Foreground" Value="Gray" />
                                                                </MultiTrigger.Conditions>
                                                                <MultiTrigger.Setters>
                                                                    <Setter Property="ContextMenu" Value="{StaticResource TripTextBoxContextMenu}" />
                                                                </MultiTrigger.Setters>
                                                            </MultiTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                                
                                            </TextBox>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                    <ListBox.ItemContainerStyle>
                                        <Style TargetType="ListBoxItem" >
                                            <Setter Property="Width" Value="130" />
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="VerticalContentAlignment" Value="Center" />
                                            <Setter Property="HorizontalContentAlignment" Value="Center" />

                                            <Setter Property="FontSize" Value="20" />
                                            <Setter Property="FontFamily" Value="Arial" />

                                           
                                            

                                            <!--<EventSetter Event="PreviewMouseLeftButtonUp" Handler="OnListBoxItemMouseLeftButtonUp" />-->
                                            <!--<EventSetter Event="KeyDown" Handler="OnListBoxKeyDown" />-->

                                            <!--<Style.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsSelected" Value="True" />
                                                    </MultiTrigger.Conditions>
                                                    <MultiTrigger.Setters>
                                                        <Setter Property="ContextMenu" Value="{StaticResource TripTextBoxContextMenu}" />
                                                    </MultiTrigger.Setters>
                                                </MultiTrigger>
                                            </Style.Triggers> -->

                                        </Style>
                                    </ListBox.ItemContainerStyle>

                                    <ListBox.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#43BDEE"/>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey }" Color="#43BDEE" />

                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey }" Color="Gray" />
                                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey }" Color="Gray" />
                                    </ListBox.Resources>

                                </ListBox>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>              
            </ListView.View>


            <ListView.Resources>

                <Style TargetType="ListViewItem" >

                    <EventSetter Event="KeyDown" Handler="OnListViewKeyDown" />
                    
                    <Setter Property="Height" Value="50" />
                    <Setter Property="FontSize" Value="20" />
                    <Setter Property="FontFamily" Value="Arial" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="Foreground" Value="White" />

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Grid Background="{TemplateBinding Background}">
                                    <Border Name="Selection" Visibility="Collapsed" />

                                    <GridViewRowPresenter Grid.RowSpan="2" Visibility="Visible"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Content="{TemplateBinding Content}"
                                              Columns="{TemplateBinding GridView.ColumnCollection}">
                                    </GridViewRowPresenter>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>  
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>      
                    </Style.Triggers>            
                </Style>

                <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                    <Rectangle HorizontalAlignment="Center" Width="1" Fill="#FFD4D4e4"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="GridViewColumnHeader">
                    <Setter Property="FontFamily" Value="Tahoma"/>
                    <Setter Property="Foreground" Value="#FF003362"/>
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="5"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="GridViewColumnHeader">
                                <Grid>
                                    <Border Background="White" BorderBrush="#FFD4D4D4" BorderThickness="1,1,0,1" Name="HeaderBorder" Padding="{TemplateBinding Padding}">
                                        <ContentPresenter Name="HeaderContent" Content="{TemplateBinding Content}" Margin="0,0,0,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                    <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,-9,0" Style="{StaticResource GridViewColumnHeaderGripper}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="HeaderContent" Property="Margin" Value="1,1,0,0"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="true">
                                        <Setter Property="Opacity" Value="1.0" TargetName="HeaderBorder"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Role" Value="Floating">
                            <Setter Property="Opacity" Value="0.7" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="GridViewColumnHeader">
                                        <Canvas Name="PART_FloatingHeaderCanvas">
                                            <Rectangle Fill="#60000000" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"/>
                                        </Canvas>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>

            </ListView.Resources>

        </ListView>
        

    </Grid>
    
</local:CBaseWindow>
